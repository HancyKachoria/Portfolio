.contact-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-12);
  padding: var(--space-8) 0;
}

.contact-info {
  display: flex;
  flex-direction: column;
  gap: var(--space-8);
}

.contact-details {
  display: flex;
  flex-direction: column;
  gap: var(--space-6);
}

.contact-item {
  display: flex;
  align-items: flex-start;
  gap: var(--space-4);
  padding: var(--space-4);
  background-color: white;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-luxe);
  transition: all var(--transition-normal);
  border: 1px solid var(--color-beige);
}

.contact-item:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

.contact-icon {
  font-size: var(--text-2xl);
  color: var(--color-gold-muted);
  margin-top: var(--space-1);
}

.contact-item h3 {
  font-size: var(--text-lg);
  margin-bottom: var(--space-1);
  color: var(--color-navy);
  font-family: var(--font-heading);
}

.contact-item p {
  color: var(--color-charcoal);
  font-size: var(--text-base);
  font-family: var(--font-body);
}

.contact-form {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
  background-color: white;
  padding: var(--space-8);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-luxe);
  border: 1px solid var(--color-beige);
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.form-group label {
  font-family: var(--font-body);
  color: var(--color-charcoal);
  font-size: var(--text-sm);
  font-weight: 500;
}

.form-group input,
.form-group textarea {
  padding: var(--space-3);
  border: 1px solid var(--color-beige);
  border-radius: var(--radius-md);
  font-family: var(--font-body);
  font-size: var(--text-base);
  transition: all var(--transition-normal);
  background-color: var(--color-ivory);
}

.form-group input:focus,
.form-group textarea:focus {
  outline: none;
  border-color: var(--color-gold-muted);
  box-shadow: 0 0 0 2px rgba(212, 175, 55, 0.1);
}

.form-group textarea {
  min-height: 150px;
  resize: vertical;
}

.contact-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: var(--space-4) var(--space-6);
  background: var(--color-navy);
  color: var(--color-ivory);
  border: none;
  border-radius: var(--radius-md);
  font-family: var(--font-body);
  font-weight: 500;
  font-size: var(--text-base);
  cursor: pointer;
  transition: all var(--transition-normal);
  letter-spacing: 0.5px;
}

.contact-button:hover {
  background: var(--color-gold-muted);
  transform: translateY(-2px);
}

.contact-button:disabled {
  background: var(--color-gray-400);
  cursor: not-allowed;
  transform: none;
}

.button-icon {
  font-size: 1.2rem;
  display: flex;
  align-items: center;
}

/* Success state animations */
.contact-button.success {
  background: var(--color-success);
}

/* Loading animation */
@keyframes sending {
  0% { transform: translateX(0); }
  50% { transform: translateX(5px); }
  100% { transform: translateX(0); }
}

.contact-button:disabled .button-icon {
  animation: sending 1s infinite;
}

/* Responsive Design */
@media (max-width: 768px) {
  .contact-container {
    grid-template-columns: 1fr;
    gap: var(--space-8);
  }

  .contact-form {
    padding: var(--space-6);
  }

  .contact-item {
    padding: var(--space-3);
  }

  .contact-icon {
    font-size: var(--text-xl);
  }

  .contact-item h3 {
    font-size: var(--text-base);
  }

  .contact-item p {
    font-size: var(--text-sm);
  }
}

/* Form validation styles */
.form-input:invalid:not(:placeholder-shown),
.form-textarea:invalid:not(:placeholder-shown) {
  border-color: var(--color-error);
}

.form-input:valid:not(:placeholder-shown),
.form-textarea:valid:not(:placeholder-shown) {
  border-color: var(--color-success);
}

/* Focus styles for accessibility */
.form-input:focus-visible,
.form-textarea:focus-visible,
.contact-button:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* New Button Styles */
.button {
  --primary: var(--color-gold-muted);
  --neutral-1: var(--color-ivory);
  --neutral-2: var(--color-beige);
  --radius: 14px;

  cursor: pointer;
  border-radius: var(--radius);
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  border: none;
  box-shadow: 0 0.5px 0.5px 1px rgba(255, 255, 255, 0.2),
    0 10px 20px rgba(0, 0, 0, 0.1), 0 4px 5px 0px rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition: all 0.3s ease;
  min-width: 200px;
  padding: 20px;
  height: 68px;
  font-family: var(--font-body);
  font-style: normal;
  font-size: 18px;
  font-weight: 600;
  background: var(--color-navy);
  color: var(--color-ivory);
}

.button:hover {
  transform: scale(1.02);
  box-shadow: 0 0 1px 2px rgba(var(--color-gold-muted-rgb), 0.3),
    0 15px 30px rgba(0, 0, 0, 0.2), 0 10px 3px -3px rgba(0, 0, 0, 0.04);
}

.button:active {
  transform: scale(1);
  box-shadow: 0 0 1px 2px rgba(255, 255, 255, 0.3),
    0 10px 3px -3px rgba(0, 0, 0, 0.2);
}

.button:after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: var(--radius);
  border: 2.5px solid transparent;
  background: linear-gradient(var(--neutral-1), var(--neutral-2)) padding-box,
    linear-gradient(to bottom, var(--color-gold-muted), var(--color-navy))
      border-box;
  z-index: 0;
  transition: all 0.4s ease;
}

.button:hover::after {
  transform: scale(1.05, 1.1);
  box-shadow: inset 0 -1px 3px 0 rgba(255, 255, 255, 0.8);
}

.button::before {
  content: "";
  inset: 7px 6px 6px 6px;
  position: absolute;
  background: linear-gradient(to bottom, var(--color-navy), var(--color-navy-dark));
  border-radius: 30px;
  filter: blur(0.5px);
  z-index: 2;
}

.state p {
  display: flex;
  align-items: center;
  justify-content: center;
}

.state .icon {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  transform: scale(1.25);
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-gold-muted);
}

.state .icon svg {
  overflow: visible;
}

/* Outline */
.outline {
  position: absolute;
  border-radius: inherit;
  overflow: hidden;
  z-index: 1;
  opacity: 0;
  transition: opacity 0.4s ease;
  inset: -2px -3.5px;
}

.outline::before {
  content: "";
  position: absolute;
  inset: -100%;
  background: conic-gradient(
    from 180deg,
    transparent 60%,
    var(--color-gold-muted) 80%,
    transparent 100%
  );
  animation: spin 2s linear infinite;
  animation-play-state: paused;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.button:hover .outline {
  opacity: 1;
}

.button:hover .outline::before {
  animation-play-state: running;
}

/* Letters */
.state p span {
  display: block;
  opacity: 0;
  animation: slideDown 0.8s ease forwards calc(var(--i) * 0.03s);
}

.button:hover p span {
  opacity: 1;
  animation: wave 0.5s ease forwards calc(var(--i) * 0.02s);
}

.button:focus p span {
  opacity: 1;
  animation: disapear 0.6s ease forwards calc(var(--i) * 0.03s);
}

@keyframes wave {
  30% {
    opacity: 1;
    transform: translateY(4px) translateX(0) rotate(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-3px) translateX(0) rotate(0);
    color: var(--color-gold-muted);
  }
  100% {
    opacity: 1;
    transform: translateY(0) translateX(0) rotate(0);
  }
}

@keyframes slideDown {
  0% {
    opacity: 0;
    transform: translateY(-20px) translateX(5px) rotate(-90deg);
    color: var(--color-gold-muted);
    filter: blur(5px);
  }
  30% {
    opacity: 1;
    transform: translateY(4px) translateX(0) rotate(0);
    filter: blur(0);
  }
  50% {
    opacity: 1;
    transform: translateY(-3px) translateX(0) rotate(0);
  }
  100% {
    opacity: 1;
    transform: translateY(0) translateX(0) rotate(0);
  }
}

@keyframes disapear {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: translateX(5px) translateY(20px);
    color: var(--primary);
    filter: blur(5px);
  }
}

/* Plane */
.state--default .icon svg {
  animation: land 0.6s ease forwards;
}

.button:hover .state--default .icon {
  transform: rotate(45deg) scale(1.25);
}

.button:focus .state--default svg {
  animation: takeOff 0.8s linear forwards;
}

.button:focus .state--default .icon {
  transform: rotate(0) scale(1.25);
}

@keyframes takeOff {
  0% {
    opacity: 1;
  }
  60% {
    opacity: 1;
    transform: translateX(70px) rotate(45deg) scale(2);
  }
  100% {
    opacity: 0;
    transform: translateX(160px) rotate(45deg) scale(0);
  }
}

@keyframes land {
  0% {
    transform: translateX(-60px) translateY(30px) rotate(-50deg) scale(2);
    opacity: 0;
    filter: blur(3px);
  }
  100% {
    transform: translateX(0) translateY(0) rotate(0);
    opacity: 1;
    filter: blur(0);
  }
}

/* Contrail */
.state--default .icon:before {
  content: "";
  position: absolute;
  top: 50%;
  height: 2px;
  width: 0;
  left: -5px;
  background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.5));
}

.button:focus .state--default .icon:before {
  animation: contrail 0.8s linear forwards;
}

@keyframes contrail {
  0% {
    width: 0;
    opacity: 1;
  }
  8% {
    width: 15px;
  }
  60% {
    opacity: 0.7;
    width: 80px;
  }
  100% {
    opacity: 0;
    width: 160px;
  }
}

/* States */
.state {
  padding-left: 29px;
  z-index: 2;
  display: flex;
  position: relative;
}

.state--default span:nth-child(4) {
  margin-right: 5px;
}

.state--sent {
  display: none;
}

.state--sent svg {
  transform: scale(1.25);
  margin-right: 8px;
}

.button:focus .state--default {
  position: absolute;
}

.button:focus .state--sent {
  display: flex;
}

.button:focus .state--sent span {
  opacity: 0;
  animation: slideDown 0.8s ease forwards calc(var(--i) * 0.2s);
}

.button:focus .state--sent .icon svg {
  opacity: 0;
  animation: appear 1.2s ease forwards 0.8s;
}

@keyframes appear {
  0% {
    opacity: 0;
    transform: scale(4) rotate(-40deg);
    color: var(--color-gold-muted);
    filter: blur(4px);
  }
  30% {
    opacity: 1;
    transform: scale(0.6);
    filter: blur(1px);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
    filter: blur(0);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Plane Hover Animation */
@keyframes fly {
  0% {
    transform: translateX(0) translateY(0);
  }
  25% {
    transform: translateX(10px) translateY(-5px);
  }
  50% {
    transform: translateX(20px) translateY(0);
  }
  75% {
    transform: translateX(10px) translateY(5px);
  }
  100% {
    transform: translateX(0) translateY(0);
  }
}

.state--default .icon {
  animation: fly 3s ease-in-out infinite;
}

.button:hover .state--default .icon {
  animation: none;
  transform: rotate(45deg) scale(1.25);
} 